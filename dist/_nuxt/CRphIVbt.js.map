{"version":3,"file":"CRphIVbt.js","sources":["../../../../../../../modules/designbadge/pages/design-badge-copy/page-builder.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex h-screen bg-gray-100 overflow-hidden\">\r\n    <!-- Design Area -->\r\n    <div class=\"flex-1 flex flex-col items-center p-4\">\r\n      <!-- Top Controls -->\r\n      <div class=\"flex flex-col items-center w-full mb-4\">\r\n        <!-- Side Tabs -->\r\n        <div class=\"mb-4 max-w-xs w-full\">\r\n          <div class=\"flex border border-gray-300 rounded-md overflow-hidden\">\r\n            <button\r\n              class=\"flex-1 px-4 py-2 text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n              :class=\"{\r\n                'bg-blue-500 text-white': activeSide === 'front',\r\n                'bg-gray-200 text-gray-700 hover:bg-gray-300':\r\n                  activeSide !== 'front',\r\n                'rounded-l-md': true,\r\n              }\"\r\n              @click=\"switchSideTab('front')\"\r\n              :disabled=\"isFlipping\"\r\n            >\r\n              Front Side\r\n            </button>\r\n            <button\r\n              class=\"flex-1 px-4 py-2 text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n              :class=\"{\r\n                'bg-blue-500 text-white': activeSide === 'back',\r\n                'bg-gray-200 text-gray-700 hover:bg-gray-300':\r\n                  activeSide !== 'back',\r\n                'rounded-r-md': true,\r\n              }\"\r\n              @click=\"switchSideTab('back')\"\r\n              :disabled=\"isFlipping\"\r\n            >\r\n              Back Side\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <!-- Zoom and Grid Controls -->\r\n        <div class=\"flex justify-end space-x-2 w-full\">\r\n          <button\r\n            class=\"p-1 bg-gray-200 rounded hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n            @click=\"zoom(-10)\"\r\n          >\r\n            <Icon name=\"mdi:minus\" class=\"w-4 h-4\" />\r\n          </button>\r\n          <span class=\"px-2 py-1 bg-gray-200 rounded text-sm\"\r\n            >{{ zoomLevel }}%</span\r\n          >\r\n          <button\r\n            class=\"p-1 bg-gray-200 rounded hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n            @click=\"zoom(10)\"\r\n          >\r\n            <Icon name=\"mdi:plus\" class=\"w-4 h-4\" />\r\n          </button>\r\n          <button\r\n            class=\"p-1 bg-gray-200 rounded hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400\"\r\n            :class=\"{ 'bg-blue-500 text-white': showGrid }\"\r\n            @click=\"toggleGrid\"\r\n          >\r\n            <Icon name=\"mdi:grid\" class=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- Design Page Wrapper -->\r\n      <div class=\"flex-1 w-full flex justify-center items-start overflow-auto\">\r\n        <div\r\n          ref=\"dropzone\"\r\n          class=\"design-page w-[400px] sm:w-[500px] h-[500px] sm:h-[600px] bg-white\"\r\n          :style=\"{\r\n            transform: `scale(${zoomScale})`,\r\n            transformOrigin: 'center top',\r\n          }\"\r\n          :class=\"{ 'grid-overlay': showGrid, flipped: activeSide === 'back' }\"\r\n          @dragover.prevent\r\n          @drop=\"handleDrop\"\r\n        >\r\n          <div class=\"card w-full h-full\">\r\n            <div\r\n              class=\"front border border-gray-300 w-full h-full absolute top-0 left-0\"\r\n            >\r\n              <!-- <h3 class=\"text-lg font-semibold mb-4\">Front Side</h3> -->\r\n              <Canvas\r\n                v-if=\"activeSide === 'front'\"\r\n                :modelValue=\"frontCanvas\"\r\n                :sendElement=\"sendElement\"\r\n                @addToFrontCanvas=\"frontCanvas.push($event)\"\r\n                @requestFrontImage=\"showFrontImageModal = true\"\r\n                @sendSelectedElement=\"receiveSelectElement\"\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              class=\"back border border-gray-300 w-full h-full absolute top-0 left-0\"\r\n            >\r\n              <!-- <h3 class=\"text-lg font-semibold mb-4\">Back Side</h3> -->\r\n              <!-- Back -->\r\n              <Canvas\r\n                v-if=\"activeSide === 'back'\"\r\n                :modelValue=\"backCanvas\"\r\n                :sendElement=\"sendElement\"\r\n                @addToBackCanvas=\"backCanvas.push($event)\"\r\n                @requestBackImage=\"showBackImageModal = true\"\r\n                @sendSelectedElement=\"receiveSelectElement\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Sidebar -->\r\n    <Sidebar\r\n      :selected-element=\"selectedElement\"\r\n      :selected-element-type=\"selectedElementType\"\r\n      :layers=\"layers\"\r\n      :selected-layer=\"selectedLayer\"\r\n      :current-properties=\"currentProperties\"\r\n      :display-option=\"displayOption\"\r\n      @drag-start=\"onDragStart\"\r\n      @drag-end=\"onDragEnd\"\r\n      @align-horizontal=\"alignHorizontal\"\r\n      @align-vertical=\"alignVertical\"\r\n      @update-properties=\"updateProperties\"\r\n      @apply-text-style=\"applyTextStyle\"\r\n      @make-transparent=\"makeTransparent\"\r\n      @apply-color=\"applyColor\"\r\n      @apply-text-align=\"applyTextAlign\"\r\n      @apply-vertical-align=\"applyVerticalAlign\"\r\n      @apply-text-transform=\"applyTextTransform\"\r\n      @toggle-text-style=\"toggleTextStyle\"\r\n      @apply-display-option=\"applyDisplayOption\"\r\n      @select-layer=\"selectLayer\"\r\n      @toggle-layer-visibility=\"toggleLayerVisibility\"\r\n    />\r\n\r\n    <ImageUploadModal\r\n      v-if=\"showFrontImageModal\"\r\n      side=\"front\"\r\n      @uploaded=\"handleFrontImageUploaded\"\r\n      @close=\"showFrontImageModal = false\"\r\n    />\r\n\r\n    <ImageUploadModal\r\n      v-if=\"showBackImageModal\"\r\n      side=\"back\"\r\n      @uploaded=\"handleBackImageUploaded\"\r\n      @close=\"showBackImageModal = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport interact from \"interactjs\";\r\nimport { useCanvasStore } from \"@/stores/useCanvasStore\";\r\n\r\nconst props = defineProps({\r\n  selectedElementId: {\r\n    type: [String, Number],\r\n    default: null,\r\n  },\r\n});\r\n\r\nconst store = useCanvasStore();\r\n\r\nconst { dropzone } = storeToRefs(store);\r\n\r\nconst frontCanvas = ref([]);\r\nconst backCanvas = ref([]);\r\n\r\nconst activeSide = ref(\"front\");\r\nconst activeTab = ref(\"design\");\r\nconst zoomLevel = ref(100);\r\nconst showGrid = ref(false);\r\nconst isFlipping = ref(false);\r\n// const dropzone = ref(null);\r\n\r\nconst elementType = ref(null);\r\nconst sendElement = ref({});\r\n\r\nconst dropX = ref(null);\r\nconst dropY = ref(null);\r\n\r\nconst showFrontImageModal = ref(false);\r\nconst showBackImageModal = ref(false);\r\n\r\nconst zoomScale = computed(() => zoomLevel.value / 100);\r\n\r\nconst switchSideTab = (side) => {\r\n  if (isFlipping.value || activeSide.value === side) return;\r\n  isFlipping.value = true;\r\n  activeSide.value = side;\r\n  setTimeout(() => {\r\n    isFlipping.value = false;\r\n  }, 600);\r\n};\r\n\r\nconst switchTab = (tab) => {\r\n  activeTab.value = tab;\r\n};\r\n\r\nconst zoom = (delta) => {\r\n  zoomLevel.value = Math.max(50, Math.min(200, zoomLevel.value + delta));\r\n};\r\n\r\nconst toggleGrid = () => {\r\n  showGrid.value = !showGrid.value;\r\n};\r\n\r\n// Prepare draggable items\r\nconst onDragStart = (tag) => {\r\n  //   console.log(\"Dragging:\", tag);\r\n  //   sendElement.value = {\r\n  //     tag: tag,\r\n  //     side: activeSide.value,\r\n  //   };\r\n};\r\n\r\nfunction handleDrop(event) {\r\n  event.preventDefault();\r\n\r\n  const canvasRect = dropzone.value.getBoundingClientRect();\r\n\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  dropX.value = mouseX - canvasRect.left;\r\n  dropY.value = mouseY - canvasRect.top;\r\n\r\n  // const element = props.sendElement;\r\n  // if (!element || !element.tag) return;\r\n\r\n  // const newElement = {\r\n  //   ...element,\r\n  //   position: { top: dropY, left: dropX }, // Accurate mouse-based position\r\n  // };\r\n\r\n  // createElement(newElement);\r\n}\r\n\r\nconst onDragEnd = ({ item, x, y }) => {\r\n  const rect = dropzone.value.getBoundingClientRect();\r\n\r\n  const dropXPos = x - rect.left;\r\n  const dropYPos = y - rect.top;\r\n\r\n  sendElement.value = {\r\n    item: item,\r\n    side: activeSide.value,\r\n    position: { top: dropYPos, left: dropXPos },\r\n    properties: { y: dropYPos, x: dropXPos },\r\n  };\r\n\r\n  store.currentProperties({ y: dropYPos, x: dropXPos });\r\n};\r\n\r\nfunction handleFrontImageUploaded(dataUrl) {\r\n  frontCanvas.value.push({\r\n    id: Date.now(),\r\n    text: dataUrl,\r\n    type: \"img\",\r\n    label: `IMG Label`,\r\n    position: { top: 100, left: 100 },\r\n    properties: {\r\n      x: 100,\r\n      y: 100,\r\n      rotation: 0,\r\n      size: { width: 250, height: 150 },\r\n    },\r\n\r\n    isSelected: false,\r\n    isDragging: false,\r\n    direction: \"ltr\",\r\n  });\r\n  showFrontImageModal.value = false;\r\n}\r\n\r\nfunction handleBackImageUploaded(dataUrl) {\r\n  backCanvas.value.push({\r\n    id: Date.now(),\r\n    text: dataUrl,\r\n    type: \"img\",\r\n    label: `IMG Label`,\r\n    position: { top: 100, left: 100 },\r\n    properties: {\r\n      x: 100,\r\n      y: 100,\r\n      rotation: 0,\r\n      size: { width: 250, height: 150 },\r\n    },\r\n    isSelected: false,\r\n    isDragging: false,\r\n    direction: \"ltr\",\r\n  });\r\n  showBackImageModal.value = false;\r\n}\r\n\r\n// Sidebar Functionality\r\n\r\n// Canvas and elements\r\nconst canvas = ref(null);\r\nconst canvasSize = ref({ width: 210, height: 297 }); // A4 size in mm\r\nconst elements = ref([]);\r\nconst selectedElement = ref(null);\r\nconst selectedLayer = ref(null);\r\nconst layers = ref([]);\r\nconst displayOption = ref(\"both sides\");\r\nconst currentProperties = store.currentProperties;\r\nwatch(\r\n  () => [activeSide.value, frontCanvas.value, backCanvas.value], // Explicit dependencies\r\n  ([newActiveSide, newFrontCanvas, newBackCanvas]) => {\r\n    // Determine the active canvas based on activeSide\r\n    const newElementData =\r\n      newActiveSide === \"front\" ? newFrontCanvas : newBackCanvas;\r\n\r\n    // Validate newElementData\r\n    if (!newElementData || !Array.isArray(newElementData)) {\r\n      console.warn(\"Invalid canvas data:\", newElementData);\r\n      elements.value = []; // Fallback to empty array to avoid errors\r\n      return;\r\n    }\r\n\r\n    // Update elements\r\n    elements.value = [...newElementData]; // Create a new copy to ensure reactivity\r\n\r\n    // Optional: Handle element selection logic (uncomment if needed)\r\n    /*\r\n    const newId = newElementData.selectedId; // Adjust based on actual data structure\r\n    if (newId !== null && newId !== undefined) {\r\n      receiveSelectElement(newId);\r\n    } else {\r\n      selectedElement.value = null;\r\n      selectedLayer.value = null;\r\n      currentProperties = {};\r\n    }\r\n    */\r\n\r\n    // Debugging (only in development)\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.log(\"elements.value updated:\", elements.value);\r\n    }\r\n  },\r\n  { deep: true } // Enable deep watching if canvas data is an object/array\r\n);\r\n\r\n// Function to receive selected element from Canvas\r\nconst receiveSelectElement = (elementId) => {\r\n  // console.log(\"Received selected element:\", elementId);\r\n  selectedElement.value = elementId;\r\n  // // const element = elements.value.find((e) => e.id === elementId);\r\n  // // if (element) {\r\n  // //   selectedLayer.value = layers.value.findIndex(\r\n  // //     (layer) => layer.id === elementId\r\n  // //   );\r\n  // //   updateProperties();\r\n  // // } else {\r\n  // //   selectedLayer.value = null;\r\n  // //   currentProperties = {};\r\n  // // }\r\n};\r\n\r\n// Computed property to get the selected element type\r\nconst selectedElementType = computed(() => {\r\n  if (selectedElement.value === null) return null;\r\n  const element = elements.value.find((e) => e.id === selectedElement.value);\r\n  console.log(\"Selected Element Type:\", element.type);\r\n  return element ? element.type : null;\r\n});\r\n\r\n// Element types\r\nconst elementTypeMap = {\r\n  h1: {\r\n    properties: {\r\n      x: 40.1,\r\n      y: 130,\r\n      width: 317,\r\n      height: 55,\r\n      rotation: 0,\r\n      font: \"Roboto\",\r\n      fontStyle: \"Regular\",\r\n      fontSize: 16,\r\n      color: \"#000000\",\r\n      text: \"\",\r\n      exampleText: \"Sample Text\",\r\n      fillTransparency: false,\r\n      textDecoration: \"none\",\r\n      lock: false,\r\n      fillColor: \"#ffffff\",\r\n      textAlign: \"left\",\r\n      verticalAlign: \"top\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  image: {\r\n    properties: {\r\n      x: 148.5,\r\n      y: 284,\r\n      width: 100,\r\n      height: 100,\r\n      rotation: 0,\r\n      src: \"https://via.placeholder.com/150\",\r\n      lock: false,\r\n      strokeColor: \"#eb2f2f\",\r\n      strokeWidth: 1,\r\n      associatedData: \"User ID\",\r\n    },\r\n  },\r\n  qrcode: {\r\n    properties: {\r\n      x: 20.5,\r\n      y: 25,\r\n      width: 100,\r\n      height: 100,\r\n      rotation: 0,\r\n      content: \"https://example.com\",\r\n      size: 100,\r\n      lock: false,\r\n    },\r\n  },\r\n  line: {\r\n    properties: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 100,\r\n      height: 2,\r\n      rotation: 0,\r\n      color: \"#000000\",\r\n      thickness: 2,\r\n      lock: false,\r\n    },\r\n  },\r\n  background: {\r\n    properties: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 210,\r\n      height: 297,\r\n      rotation: 0,\r\n      color: \"#ffffff\",\r\n      lock: false,\r\n    },\r\n  },\r\n  eventlogo: {\r\n    properties: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 100,\r\n      height: 100,\r\n      rotation: 0,\r\n      src: \"https://via.placeholder.com/100\",\r\n      lock: false,\r\n    },\r\n  },\r\n  useravatar: {\r\n    properties: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 50,\r\n      height: 50,\r\n      rotation: 0,\r\n      src: \"https://via.placeholder.com/50\",\r\n      lock: false,\r\n    },\r\n  },\r\n  punching_area: {\r\n    properties: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 100,\r\n      height: 20,\r\n      rotation: 0,\r\n      color: \"#000000\",\r\n      lock: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst handleKeydown = (elementId, event) => {\r\n  if (displayOption.value !== \"right side only\") return;\r\n  const element = elements.value.find((e) => e.id === elementId);\r\n  if (!element || element.type !== \"text\") return;\r\n\r\n  // Handle space key\r\n  if (event.key === \" \" || event.key === \"Spacebar\") {\r\n    event.preventDefault(); // Prevent default space behavior\r\n    const target = event.target;\r\n    const text = target.textContent || \"\";\r\n    target.textContent = text + \" \"; // Append space to the end\r\n    element.properties.text = target.textContent; // Update element text\r\n    currentProperties.text = target.textContent; // Update current properties\r\n\r\n    // Move cursor to the end\r\n    const range = document.createRange();\r\n    const selection = window.getSelection();\r\n    range.selectNodeContents(target);\r\n    range.collapse(false); // Collapse to the end\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n  }\r\n};\r\n\r\n// Element management\r\nconst addElement = (type, x = 100, y = 100) => {\r\n  const id = Date.now();\r\n  const elementType = elementTypeMap[type];\r\n  if (!elementType) return;\r\n\r\n  const element = {\r\n    id,\r\n    type,\r\n    properties: { ...elementType.properties, x, y },\r\n  };\r\n\r\n  elements.value.push(element);\r\n  layers.value.push({\r\n    id,\r\n    name: `Layer ${layers.value.length + 1}`,\r\n    type,\r\n    visible: true,\r\n    locked: false,\r\n  });\r\n\r\n  nextTick(() => setupInteract(element));\r\n  return element;\r\n};\r\n\r\nconst setupInteract = (element) => {\r\n  const target = document.querySelector(`[data-element-id=\"${element.id}\"]`);\r\n  if (!target) return;\r\n\r\n  interact(target)\r\n    .draggable({\r\n      enabled: !element.properties.lock,\r\n      inertia: true,\r\n      modifiers: [\r\n        interact.modifiers.restrictRect({\r\n          restriction: canvas.value,\r\n          endOnly: true,\r\n        }),\r\n      ],\r\n      onmove: (event) => {\r\n        if (element.properties.lock) return;\r\n        const index = elements.value.findIndex((e) => e.id === element.id);\r\n        if (index !== -1) {\r\n          elements[index].properties.x += event.dx;\r\n          elements[index].properties.y += event.dy;\r\n          store.updateProperties();\r\n        }\r\n      },\r\n    })\r\n    .resizable({\r\n      enabled: !element.properties.lock,\r\n      edges: { left: true, right: true, bottom: true, top: true },\r\n      modifiers: [\r\n        interact.modifiers.restrictSize({\r\n          min: { width: 10, height: 10 },\r\n        }),\r\n      ],\r\n      onmove: (event) => {\r\n        if (element.properties.lock) return;\r\n        const index = elements.value.findIndex((e) => e.id === element.id);\r\n        if (index !== -1) {\r\n          elements[index].properties.width = event.rect.width;\r\n          elements[index].properties.height = event.rect.height;\r\n          elements[index].properties.x += event.deltaRect.left;\r\n          elements[index].properties.y += event.deltaRect.top;\r\n          store.updateProperties();\r\n        }\r\n      },\r\n    })\r\n    .on(\"tap\", () => selectElement(element.id));\r\n};\r\n\r\nconst selectElement = (elementId) => {\r\n  console.log(\"Selecting element:\", elementId);\r\n  selectedElement.value = elementId;\r\n  selectedLayer.value = layers.value.findIndex(\r\n    (layer) => layer.id === elementId\r\n  );\r\n  store.updateProperties();\r\n};\r\n\r\nconst selectLayer = (index) => {\r\n  console.log(\"Selecting layer:\", index);\r\n  selectedLayer.value = index;\r\n  selectedElement.value = layers.value[index].id;\r\n  store.updateProperties();\r\n};\r\n\r\n// const updateProperties = (newProperties = null) => {\r\n//   if (selectedElement.value === null) return;\r\n//   const element = elements.value.find((e) => e.id === selectedElement.value);\r\n//   if (!element) return;\r\n\r\n//   if (newProperties) {\r\n//     if (element.type === \"text\") {\r\n//       element.properties = {\r\n//         ...element.properties,\r\n//         ...newProperties,\r\n//         width: newProperties.w,\r\n//         height: newProperties.h,\r\n//         rotation: newProperties.r,\r\n//       };\r\n//     } else if (\r\n//       element.type === \"image\" ||\r\n//       element.type === \"eventlogo\" ||\r\n//       element.type === \"useravatar\"\r\n//     ) {\r\n//       element.properties = {\r\n//         ...element.properties,\r\n//         ...newProperties,\r\n//         width: newProperties.w,\r\n//         height: newProperties.h,\r\n//         rotation: newProperties.r,\r\n//       };\r\n//     } else if (element.type === \"qrcode\") {\r\n//       element.properties = {\r\n//         ...element.properties,\r\n//         ...newProperties,\r\n//         width: newProperties.w,\r\n//         height: newProperties.h,\r\n//         rotation: newProperties.r,\r\n//       };\r\n//     } else {\r\n//       element.properties = {\r\n//         ...element.properties,\r\n//         ...newProperties,\r\n//         width: newProperties.w,\r\n//         height: newProperties.h,\r\n//         rotation: newProperties.r,\r\n//       };\r\n//     }\r\n//   }\r\n\r\n//   if (element.type === \"text\") {\r\n//     currentProperties = {\r\n//       x: element.properties.x || 40.1,\r\n//       y: element.properties.y || 130,\r\n//       w: element.properties.width || 317,\r\n//       h: element.properties.height || 55,\r\n//       r: element.properties.rotation || 0,\r\n//       font: element.properties.font || \"Roboto\",\r\n//       fontStyle: element.properties.fontStyle || \"Regular\",\r\n//       fontSize: element.properties.fontSize || 16,\r\n//       fillColor: element.properties.fillColor || \"#ffffff\",\r\n//       fillTransparency: element.properties.fillTransparency || false,\r\n//       text: element.properties.text || element.properties.exampleText || \"\",\r\n//       textDecoration: element.properties.textDecoration || \"none\",\r\n//       color: element.properties.color || \"#000000\",\r\n//       textAlign: element.properties.textAlign || \"left\",\r\n//       verticalAlign: element.properties.verticalAlign || \"top\",\r\n//       textTransform: element.properties.textTransform || \"none\",\r\n//     };\r\n//   } else if (element.type === \"img\") {\r\n//     currentProperties = {\r\n//       x: element.properties.x || 148.5,\r\n//       y: element.properties.y || 284,\r\n//       w: element.properties.width || 100,\r\n//       h: element.properties.height || 100,\r\n//       r: element.properties.rotation || 0,\r\n//       src: element.properties.src || \"https://via.placeholder.com/150\",\r\n//       strokeColor: element.properties.strokeColor || \"#eb2f2f\",\r\n//       strokeWidth: element.properties.strokeWidth || 1,\r\n//       associatedData: element.properties.associatedData || \"User ID\",\r\n//     };\r\n//   } else if (element.type === \"qrcode\") {\r\n//     currentProperties = {\r\n//       x: element.properties.x || 20.5,\r\n//       y: element.properties.y || 25,\r\n//       w: element.properties.width || 100,\r\n//       h: element.properties.height || 100,\r\n//       r: element.properties.rotation || 0,\r\n//       content: element.properties.content || \"https://example.com\",\r\n//       size: element.properties.size || 100,\r\n//     };\r\n//   } else {\r\n//     currentProperties = {\r\n//       x: element.properties.x || 0,\r\n//       y: element.properties.y || 0,\r\n//       w: element.properties.width || 100,\r\n//       h: element.properties.height || 100,\r\n//       r: element.properties.rotation || 0,\r\n//     };\r\n//   }\r\n// };\r\n\r\nconst deleteElement = () => {\r\n  if (!selectedElement.value) return;\r\n\r\n  const index = elements.value.findIndex((e) => e.id === selectedElement.value);\r\n  if (index === -1) return;\r\n\r\n  elements.value.splice(index, 1);\r\n  layers.value = layers.value.filter(\r\n    (layer) => layer.id !== selectedElement.value\r\n  );\r\n  selectedElement.value = null;\r\n  selectedLayer.value = null;\r\n  currentProperties = {};\r\n};\r\n\r\nconst savePosition = () => {\r\n  if (selectedElement.value === null) return;\r\n\r\n  const index = elements.value.findIndex((e) => e.id === selectedElement.value);\r\n  if (index === -1) return;\r\n\r\n  // console.log(\"Saving position for element:\", elements.value[index].id);\r\n\r\n  const element = elements.value[index];\r\n  if (element.type === \"h1\") {\r\n    element.properties = {\r\n      ...element.properties,\r\n      x: currentProperties.x,\r\n      y: currentProperties.y,\r\n      width: currentProperties.w,\r\n      height: currentProperties.h,\r\n      rotation: currentProperties.r,\r\n      font: currentProperties.font,\r\n      fontStyle: currentProperties.fontStyle,\r\n      fontSize: currentProperties.fontSize,\r\n      fillColor: currentProperties.fillColor,\r\n      fillTransparency: currentProperties.fillTransparency,\r\n      text: currentProperties.text,\r\n      textDecoration: currentProperties.textDecoration,\r\n      color: currentProperties.color,\r\n      textAlign: currentProperties.textAlign,\r\n      verticalAlign: currentProperties.verticalAlign,\r\n      textTransform: currentProperties.textTransform,\r\n    };\r\n  } else if (\r\n    element.type === \"image\" ||\r\n    element.type === \"eventlogo\" ||\r\n    element.type === \"useravatar\"\r\n  ) {\r\n    element.properties = {\r\n      ...element.properties,\r\n      x: currentProperties.x,\r\n      y: currentProperties.y,\r\n      width: currentProperties.w,\r\n      height: currentProperties.h,\r\n      rotation: currentProperties.r,\r\n      src: currentProperties.src,\r\n      strokeColor: currentProperties.strokeColor,\r\n      strokeWidth: currentProperties.strokeWidth,\r\n      associatedData: currentProperties.associatedData,\r\n    };\r\n  } else if (element.type === \"qrcode\") {\r\n    element.properties = {\r\n      ...element.properties,\r\n      x: currentProperties.x,\r\n      y: currentProperties.y,\r\n      width: currentProperties.w,\r\n      height: currentProperties.h,\r\n      rotation: currentProperties.r,\r\n      content: currentProperties.content,\r\n      size: currentProperties.size,\r\n    };\r\n  } else {\r\n    element.properties = {\r\n      ...element.properties,\r\n      x: currentProperties.x,\r\n      y: currentProperties.y,\r\n      width: currentProperties.w,\r\n      height: currentProperties.h,\r\n      rotation: currentProperties.r,\r\n    };\r\n  }\r\n};\r\n\r\nconst saveDesign = () => {\r\n  const designData = {\r\n    elements: elements.value.map((element) => ({\r\n      ...element,\r\n      properties: { ...element.properties },\r\n    })),\r\n    layers: layers.value,\r\n    canvasSize: canvasSize.value,\r\n  };\r\n  console.log(\"Saving design:\", designData);\r\n  return designData;\r\n};\r\n\r\nconst loadDesign = (data) => {\r\n  elements = data.elements;\r\n  layers.value = data.layers;\r\n  canvasSize.value = data.canvasSize;\r\n  nextTick(() => elements.value.forEach(setupInteract));\r\n};\r\n\r\nconst handleCanvasClick = (event) => {\r\n  if (!event.target.closest(\"[data-element-id]\")) {\r\n    selectedElement.value = null;\r\n    selectedLayer.value = null;\r\n    currentProperties = {};\r\n  }\r\n};\r\n\r\nconst updateText = (elementId, event) => {\r\n  const element = elements.value.find((e) => e.id === elementId);\r\n  if (element && element.type === \"text\") {\r\n    element.properties.text = event.target.textContent;\r\n    currentProperties.text = event.target.textContent;\r\n    applyTextStyle();\r\n  }\r\n};\r\n\r\n// const dragStart = (type) => {\r\n//   event.dataTransfer.setData(\"text/plain\", type);\r\n// };\r\n\r\n// const onDrop = (event) => {\r\n//   event.preventDefault();\r\n//   const rect = canvas.value.getBoundingClientRect();\r\n//   const x = event.clientX - rect.left;\r\n//   const y = event.clientY - rect.top;\r\n//   const type = event.dataTransfer.getData(\"text\");\r\n\r\n//   if (type) {\r\n//     const element = addElement(type, x, y);\r\n//     if (element) {\r\n//       selectElement(element.id);\r\n//     }\r\n//   }\r\n// };\r\n\r\nconst toggleLayerVisibility = (index) => {\r\n  layers.value[index].visible = !layers.value[index].visible;\r\n  const elementIndex = elements.value.findIndex(\r\n    (e) => e.id === layers.value[index].id\r\n  );\r\n  if (elementIndex !== -1) {\r\n    elements[elementIndex].properties.lock = !layers.value[index].visible;\r\n    store.updateProperties();\r\n  }\r\n};\r\n\r\n// Alignment methods\r\nconst alignHorizontal = (alignment) => {\r\n  if (selectedElement.value === null) return;\r\n  const element = elements.value.find((e) => e.id === selectedElement.value);\r\n  if (!element) return;\r\n\r\n  const canvasRect = dropzone.value.getBoundingClientRect();\r\n  const elementWidth = currentProperties.w || element.properties.width;\r\n\r\n  switch (alignment) {\r\n    case \"left\":\r\n      currentProperties.x = 0;\r\n      break;\r\n    case \"center\":\r\n      currentProperties.x = (canvasRect.width - elementWidth) / 2;\r\n      break;\r\n    case \"right\":\r\n      currentProperties.x = canvasRect.width - elementWidth;\r\n      break;\r\n  }\r\n  savePosition();\r\n};\r\n\r\nconst alignVertical = (alignment) => {\r\n  if (selectedElement.value === null) return;\r\n  const element = elements.value.find((e) => e.id === selectedElement.value);\r\n  if (!element) return;\r\n\r\n  const canvasRect = canvas.value.getBoundingClientRect();\r\n  const elementHeight = currentProperties.h || element.properties.height;\r\n\r\n  switch (alignment) {\r\n    case \"top\":\r\n      currentProperties.y = 0;\r\n      break;\r\n    case \"middle\":\r\n      currentProperties.y = (canvasRect.height - elementHeight) / 2;\r\n      break;\r\n    case \"bottom\":\r\n      currentProperties.y = canvasRect.height - elementHeight;\r\n      break;\r\n  }\r\n  savePosition();\r\n};\r\n\r\n// Text style methods\r\nconst toggleTextStyle = (style) => {\r\n  if (selectedElement.value === null) return;\r\n  const element = elements.value.find((e) => e.id === selectedElement.value);\r\n  if (!element || element.type !== \"text\") return;\r\n\r\n  if (style === \"bold\") {\r\n    currentProperties.fontStyle =\r\n      currentProperties.fontStyle === \"Bold\" ? \"Regular\" : \"Bold\";\r\n  } else if (style === \"italic\") {\r\n    currentProperties.fontStyle =\r\n      currentProperties.fontStyle === \"Italic\" ? \"Regular\" : \"Italic\";\r\n  } else if (style === \"underline\") {\r\n    currentProperties.textDecoration =\r\n      currentProperties.textDecoration === \"underline\" ? \"none\" : \"underline\";\r\n  }\r\n  applyTextStyle();\r\n};\r\n\r\nconst applyTextStyle = (newProperties = null) => {\r\n  if (selectedElement.value === null) return;\r\n  const element = elements.value.find((e) => e.id === selectedElement.value);\r\n  if (!element || element.type !== \"text\") return;\r\n\r\n  if (newProperties) {\r\n    currentProperties = { ...currentProperties, ...newProperties };\r\n  }\r\n\r\n  const target = document.querySelector(\r\n    `[data-element-id=\"${element.id}\"] div[contenteditable]`\r\n  );\r\n  if (target) {\r\n    target.style.fontFamily = currentProperties.font;\r\n    target.style.fontSize = `${currentProperties.fontSize}px`;\r\n    target.style.fontWeight =\r\n      currentProperties.fontStyle === \"Bold\" ? \"bold\" : \"normal\";\r\n    target.style.fontStyle =\r\n      currentProperties.fontStyle === \"Italic\" ? \"italic\" : \"normal\";\r\n    target.style.color = currentProperties.color;\r\n    target.style.backgroundColor = currentProperties.fillTransparency\r\n      ? \"transparent\"\r\n      : currentProperties.fillColor;\r\n    target.style.textDecoration = currentProperties.textDecoration;\r\n    target.style.textAlign =\r\n      displayOption.value === \"right side only\"\r\n        ? \"right\"\r\n        : currentProperties.textAlign;\r\n    target.style.verticalAlign = currentProperties.verticalAlign;\r\n    target.style.textTransform = currentProperties.textTransform;\r\n    target.style.direction =\r\n      displayOption.value === \"right side only\" ? \"rtl\" : \"ltr\";\r\n    target.setAttribute(\r\n      \"dir\",\r\n      displayOption.value === \"right side only\" ? \"rtl\" : \"ltr\"\r\n    );\r\n    target.textContent =\r\n      currentProperties.text || element.properties.exampleText;\r\n\r\n    // Ensure cursor is at the end for RTL\r\n    if (displayOption.value === \"right side only\") {\r\n      const range = document.createRange();\r\n      const selection = window.getSelection();\r\n      range.selectNodeContents(target);\r\n      range.collapse(false); // Collapse to the end\r\n      selection.removeAllRanges();\r\n      selection.addRange(range);\r\n    }\r\n  }\r\n  savePosition();\r\n};\r\n\r\nconst makeTransparent = () => {\r\n  if (selectedElementType.value === \"text\") {\r\n    currentProperties.fillColor = \"rgba(0, 0, 0, 0)\";\r\n    currentProperties.fillTransparency = true;\r\n    applyTextStyle();\r\n  }\r\n};\r\n\r\nconst applyColor = (color) => {\r\n  if (selectedElementType.value === \"text\") {\r\n    currentProperties.fillColor = color;\r\n    currentProperties.fillTransparency = false;\r\n    applyTextStyle();\r\n    nextTick(() => {\r\n      const target = document.querySelector(\r\n        `[data-element-id=\"${selectedElement.value}\"] div[contenteditable]`\r\n      );\r\n      if (target) target.style.backgroundColor = currentProperties.fillColor;\r\n    });\r\n  }\r\n};\r\n\r\nconst applyTextAlign = (align) => {\r\n  if (selectedElementType.value === \"text\") {\r\n    currentProperties.textAlign = align;\r\n    applyTextStyle();\r\n  }\r\n};\r\n\r\nconst applyVerticalAlign = (align) => {\r\n  if (selectedElementType.value === \"text\") {\r\n    currentProperties.verticalAlign = align;\r\n    applyTextStyle();\r\n  }\r\n};\r\n\r\nconst applyTextTransform = (transform) => {\r\n  if (selectedElementType.value === \"text\") {\r\n    currentProperties.textTransform = transform;\r\n    applyTextStyle();\r\n  }\r\n};\r\n\r\nconst applyDisplayOption = (option) => {\r\n  displayOption.value = option;\r\n  applyTextStyle();\r\n};\r\n\r\n// Watch selectedElement to update properties\r\nwatch(selectedElement, () => {\r\n  store.updateProperties();\r\n  if (selectedElement.value) applyTextStyle();\r\n});\r\n\r\n// Watch currentProperties to save changes\r\nwatch(currentProperties, () => savePosition(), { deep: true });\r\n\r\n// Initialize interact.js\r\nonMounted(() => {\r\n  elements.value.forEach(setupInteract);\r\n});\r\n\r\nwatch(displayOption, () => {\r\n  applyTextStyle();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.design-page {\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.design-page.flipped .card {\r\n  transform: rotateY(180deg);\r\n}\r\n\r\n.front,\r\n.back {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n.back {\r\n  transform: rotateY(180deg);\r\n}\r\n\r\n.grid-overlay::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  inset: 0;\r\n  background-image: linear-gradient(\r\n      to right,\r\n      rgba(156, 163, 175, 0.2) 1px,\r\n      transparent 1px\r\n    ),\r\n    linear-gradient(to bottom, rgba(156, 163, 175, 0.2) 1px, transparent 1px),\r\n    linear-gradient(to right, rgba(156, 163, 175, 0.6) 1px, transparent 1px),\r\n    linear-gradient(to bottom, rgba(156, 163, 175, 0.6) 1px, transparent 1px);\r\n  background-size: calc(100% / 20) calc(100% / 20),\r\n    calc(100% / 20) calc(100% / 20), calc(100% / 4) 100%, 100% calc(100% / 6);\r\n  pointer-events: none;\r\n  z-index: 10;\r\n}\r\n\r\nbutton:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\ndetails[open] summary .rotate-180 {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .design-page {\r\n    width: 250px;\r\n    height: 350px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["store","useCanvasStore","dropzone","storeToRefs","frontCanvas","ref","backCanvas","activeSide","zoomLevel","showGrid","isFlipping","sendElement","dropX","dropY","showFrontImageModal","showBackImageModal","zoomScale","computed","switchSideTab","side","zoom","delta","toggleGrid","onDragStart","tag","handleDrop","event","canvasRect","mouseX","mouseY","onDragEnd","item","x","y","rect","dropXPos","dropYPos","handleFrontImageUploaded","dataUrl","handleBackImageUploaded","canvas","elements","selectedElement","selectedLayer","layers","displayOption","currentProperties","watch","newActiveSide","newFrontCanvas","newBackCanvas","newElementData","receiveSelectElement","elementId","selectedElementType","element","e","setupInteract","target","interact","index","selectElement","layer","selectLayer","savePosition","toggleLayerVisibility","elementIndex","alignHorizontal","alignment","elementWidth","alignVertical","elementHeight","toggleTextStyle","style","applyTextStyle","newProperties","range","selection","makeTransparent","applyColor","color","nextTick","applyTextAlign","align","applyVerticalAlign","applyTextTransform","transform","applyDisplayOption","option","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_unref","_hoisted_6","_hoisted_7","_hoisted_8","_createVNode","_component_Icon","_hoisted_9","_toDisplayString","_normalizeClass","_hoisted_10","_normalizeStyle","_hoisted_11","_hoisted_12","_createBlock","_component_Canvas","_cache","$event","_hoisted_13","_component_Sidebar","updateProperties","_component_ImageUploadModal"],"mappings":"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"}